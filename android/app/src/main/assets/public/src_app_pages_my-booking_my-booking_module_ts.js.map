{"version":3,"file":"src_app_pages_my-booking_my-booking_module_ts.js","mappings":"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","sources":["./src/app/pages/my-booking/my-booking-routing.module.ts","./src/app/pages/my-booking/my-booking.module.ts","./src/app/pages/my-booking/my-booking.page.ts","./src/app/pages/my-booking/my-booking.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MyBookingPage } from './my-booking.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyBookingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MyBookingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MyBookingPageRoutingModule } from './my-booking-routing.module';\r\n\r\nimport { MyBookingPage } from './my-booking.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MyBookingPageRoutingModule\r\n  ],\r\n  declarations: [MyBookingPage]\r\n})\r\nexport class MyBookingPageModule {}\r\n","import { AlertController } from '@ionic/angular';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { AlertTypeEnum } from 'src/app/services/error-handler/alert-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-my-booking',\r\n  templateUrl: './my-booking.page.html',\r\n  styleUrls: ['./my-booking.page.scss'],\r\n})\r\nexport class MyBookingPage implements OnInit {\r\n\r\n  upcomingBookingList: any = [];\r\n  cancelledBookingList: any = [];\r\n  completedBookingList: any = [];\r\n  selectedSegment: string = 'upcoming';\r\n\r\n  constructor(\r\n    private _apiService:ApiService, \r\n    private commonService:CommonService,\r\n    private alertCtrl: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n  \r\n  ionViewDidEnter() {\r\n    this.getBooking();\r\n  }\r\n\r\n  \r\n  segmentChange(event: any) {\r\n    // console.log(event.detail.value);\r\n    this.selectedSegment = event.detail.value;\r\n  }\r\n\r\n  async getBooking(){\r\n    this._apiService.getMyBookings().then((data: any) => {\r\n      console.log(data);\r\n      if (data.status == 200) {\r\n       this.upcomingBookingList = data.data.Booked;\r\n       this.cancelledBookingList = data.data.Cancelled;\r\n       this.completedBookingList = data.data.Completed;\r\n      }\r\n    }).catch(err => {\r\n      this.commonService.showAlert(AlertTypeEnum.Error, err.message);\r\n    });\r\n  }\r\n\r\n  async onCancelBooking(id: any) {\r\n    this.commonService.showLoader();\r\n    this._apiService.cancelBooking(id).then((data: any) => {\r\n      console.log(data);\r\n      if (data.status == 200) {\r\n        this.commonService.showToast(data.msg);\r\n        this.getBooking();\r\n      }\r\n    }).catch(err => {\r\n      this.commonService.showAlert(AlertTypeEnum.Error, err.message);\r\n    });\r\n  }\r\n\r\n  async presentAlert(id) {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Warning',\r\n      message: 'Are you sure want to cancel?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.onCancelBooking(id)\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          role: 'cancel'\r\n        }\r\n      ]\r\n    });\r\n\r\n    alert.present();\r\n  }\r\n}\r\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar style=\\\"--background: transparent;\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"m1\\\">\\r\\n        <img src=\\\"/assets/images/menu.svg\\\" />\\r\\n      </ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"primary\\\">My Bookings</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n      <ion-button routerLink=\\\"/notifications\\\">\\r\\n        <ion-icon name=\\\"notifications\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-segment (ionChange)=\\\"segmentChange($event)\\\" [value]=\\\"selectedSegment\\\" mode=\\\"md\\\">\\r\\n    <ion-segment-button value=\\\"upcoming\\\">\\r\\n      <ion-label [color]=\\\"selectedSegment == 'upcoming' ? 'secondary' : 'primary'\\\">Upcoming</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"past\\\">\\r\\n      <ion-label [color]=\\\"selectedSegment == 'past' ? 'secondary' : 'primary'\\\">Past</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"cancelled\\\">\\r\\n      <ion-label [color]=\\\"selectedSegment == 'cancelled' ? 'secondary' : 'primary'\\\">Cancelled</ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-xl=\\\"6\\\" offset-xl=\\\"3\\\">\\r\\n        <ion-list *ngIf=\\\"selectedSegment == 'upcoming' && upcomingBookingList.length\\\">\\r\\n          <ion-card *ngFor=\\\"let booking of upcomingBookingList\\\">\\r\\n            <ion-card-header [color]=\\\"booking.status == 'Booked' ? 'warning' : 'success'\\\">\\r\\n              <ion-card-subtitle>\\r\\n                <!-- {{booking.bookingdetails[0].category_name}}, {{booking.bookingdetails[1].category_name}}... <span class=\\\"ion-float-right\\\">{{ booking.booking_date_start | date}}</span> -->\\r\\n                Service <span *ngIf=\\\"booking.status == 'Confirmed'\\\">[{{booking.status}}]</span> <span class=\\\"ion-float-right\\\">{{booking.booking_date_start | date}}</span>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <div style=\\\"display: flex; flex-direction: row;\\\">\\r\\n                <img src=\\\"/assets/images/stock-image.svg\\\" style=\\\"padding: 2%;\\\" />\\r\\n                <div style=\\\"width: 100%;\\\">\\r\\n                  <ion-list>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"calendar\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"white-space: pre-wrap;\\\">{{booking.booking_date_start | date}} - {{booking.booking_date_end | date}}</ion-label> <!--| date: 'shortTime'-->\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{booking.start_time.toString().substr(0,5)}} - {{booking.end_time.toString().substr(0,5)}}</ion-label> <!--| date: 'shortTime'-->\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\" *ngIf=\\\"booking.status == 'Confirmed'\\\">\\r\\n                      <ion-icon name=\\\"person\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"white-space: pre-wrap;\\\">{{booking.worker?.name}}</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"location\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"white-space: pre-wrap;\\\">{{booking.location}}</ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-list>\\r\\n                </div>\\r\\n              </div>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-button (click)=\\\"onUpdateBooking()\\\" expand=\\\"block\\\" color=\\\"secondary-primary\\\" shape=\\\"round\\\">\\r\\n                    Update\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button (click)=\\\"presentAlert(booking.unique_id)\\\" expand=\\\"block\\\" color=\\\"primary\\\" shape=\\\"round\\\">\\r\\n                    Cancel\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-list>\\r\\n        \\r\\n        <ion-list *ngIf=\\\"selectedSegment == 'past' && completedBookingList.length\\\">\\r\\n          <ion-card *ngFor=\\\"let booking of completedBookingList\\\">\\r\\n            <ion-card-header color=\\\"primary\\\">\\r\\n              <ion-card-subtitle>\\r\\n                Cleaning Service <span class=\\\"ion-float-right\\\">{{'03-12-2022' | date}}</span>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <div style=\\\"display: flex; flex-direction: row;\\\">\\r\\n                <img src=\\\"/assets/images/stock-image.svg\\\" style=\\\"padding: 2%;\\\" />\\r\\n                <div style=\\\"width: 100%;\\\">\\r\\n                  <ion-list>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{today | date: 'shortTime'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"person\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{'Rahul Raj'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-list>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-list *ngIf=\\\"selectedSegment == 'cancelled' && cancelledBookingList.length\\\">\\r\\n          <ion-card *ngFor=\\\"let booking of cancelledBookingList\\\">\\r\\n            <ion-card-header color=\\\"danger\\\">\\r\\n              <ion-card-subtitle>\\r\\n                Service [Cancelled] <span class=\\\"ion-float-right\\\">{{booking.booking_date_start | date}}</span>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <div style=\\\"display: flex; flex-direction: row;\\\">\\r\\n                <img src=\\\"/assets/images/stock-image.svg\\\" style=\\\"padding: 2%;\\\" />\\r\\n                <div style=\\\"width: 100%;\\\">\\r\\n                  <ion-list>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"calendar\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"white-space: pre-wrap;\\\">{{booking.booking_date_start | date}} - {{booking.booking_date_end | date}}</ion-label> <!--| date: 'shortTime'-->\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{booking.start_time.toString().substr(0,5)}} - {{booking.end_time.toString().substr(0,5)}}</ion-label> <!--| date: 'shortTime'-->\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\" *ngIf=\\\"booking.status == 'Confirmed'\\\">\\r\\n                      <ion-icon name=\\\"person\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{booking.worker?.name}}</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"location\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label style=\\\"white-space: pre-wrap;\\\">{{booking.location}}</ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-list>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-list>\\r\\n\\r\\n        <div *ngIf=\\\"(selectedSegment == 'past' && !completedBookingList.length) || (selectedSegment == 'upcoming' && !upcomingBookingList.length) || (selectedSegment == 'cancelled' && !cancelledBookingList.length)\\\">\\r\\n          <div class=\\\"empty-booking\\\">\\r\\n            <ion-icon name=\\\"calendar-clear\\\"></ion-icon>\\r\\n            <p>You dont have any bookings here!</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}