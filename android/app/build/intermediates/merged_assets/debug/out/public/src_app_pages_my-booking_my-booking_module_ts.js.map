{"version":3,"file":"src_app_pages_my-booking_my-booking_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEL;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE4B;AAEvB;IAWrC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,2DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkB;AACQ;AACM;AACe;IAOlE,aAAa,SAAb,aAAa;IAKxB,YAAoB,WAAsB,EAAU,aAA2B;QAA3D,gBAAW,GAAX,WAAW,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAc;QAH/E,oBAAe,GAAW,UAAU,CAAC;IAG8C,CAAC;IAEpF,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IAGD,aAAa,CAAC,KAAU;QACtB,mCAAmC;QACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAC5C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE;gBACzB,mCAAmC;gBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAE3B;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,+FAAmB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QACH,iDAAiD;QACjD,uBAAuB;QACvB,8BAA8B;QAC9B,qCAAqC;QACrC,MAAM;QACN,oBAAoB;QACpB,oEAAoE;QACpE,MAAM;IACR,CAAC;CACF;;YA/CQ,oEAAU;YACV,0EAAa;;AAQT,aAAa;IALzB,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,wLAAqC;;KAEtC,CAAC;GACW,aAAa,CAsCzB;AAtCyB;;;;;;;;;;;;;;;ACV1B,iEAAe,0FAA0F,60CAA60C,qBAAqB,+JAA+J,oBAAoB,uFAAuF,kDAAkD,uMAAuM,2BAA2B,qNAAqN,aAAa,6hCAA6hC,qBAAqB,+JAA+J,oBAAoB,uFAAuF,kDAAkD,uMAAuM,2BAA2B,qNAAqN,aAAa,mSAAmS","sources":["./src/app/pages/my-booking/my-booking-routing.module.ts","./src/app/pages/my-booking/my-booking.module.ts","./src/app/pages/my-booking/my-booking.page.ts","./src/app/pages/my-booking/my-booking.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MyBookingPage } from './my-booking.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MyBookingPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MyBookingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MyBookingPageRoutingModule } from './my-booking-routing.module';\r\n\r\nimport { MyBookingPage } from './my-booking.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MyBookingPageRoutingModule\r\n  ],\r\n  declarations: [MyBookingPage]\r\n})\r\nexport class MyBookingPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { AlertTypeEnum } from 'src/app/services/error-handler/alert-type.enum';\r\n\r\n@Component({\r\n  selector: 'app-my-booking',\r\n  templateUrl: './my-booking.page.html',\r\n  styleUrls: ['./my-booking.page.scss'],\r\n})\r\nexport class MyBookingPage implements OnInit {\r\n\r\n  selectedSegment: string = 'upcoming';\r\n  today: Date;\r\n\r\n  constructor(private _apiService:ApiService, private commonService:CommonService) { }\r\n\r\n  ngOnInit() {\r\n    this.today = new Date();\r\n    this.getBooking()\r\n  }\r\n\r\n  \r\n  segmentChange(event: any) {\r\n    // console.log(event.detail.value);\r\n    this.selectedSegment = event.detail.value;\r\n  }\r\n\r\n  getBooking(){\r\n    this._apiService.getMyBookings().then((data: any) => {\r\n      console.log(data);\r\n      if (data.status == 200) {\r\n     //   this.categoryList = data.data;\r\n     console.log(data, \"booking\");\r\n     \r\n      }\r\n    }).catch(err => {\r\n      this.commonService.showAlert(AlertTypeEnum.Error, err.message);\r\n    });\r\n    // this.api.getCategories().then((data: any) => {\r\n    //   console.log(data);\r\n    //   if (data.status == 200) {\r\n    //     this.categoryList = data.data;\r\n    //   }\r\n    // }).catch(err => {\r\n    //   this.commonService.showAlert(AlertTypeEnum.Error, err.message);\r\n    // });\r\n  }\r\n}\r\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\r\\n  <ion-toolbar style=\\\"--background: transparent;\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"m1\\\">\\r\\n        <img src=\\\"/assets/images/menu.svg\\\" />\\r\\n      </ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"primary\\\">My Bookings</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n      <ion-button routerLink=\\\"/notifications\\\">\\r\\n        <ion-icon name=\\\"notifications\\\" slot=\\\"icon-only\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-segment (ionChange)=\\\"segmentChange($event)\\\" [value]=\\\"selectedSegment\\\" mode=\\\"md\\\">\\r\\n    <ion-segment-button value=\\\"upcoming\\\">\\r\\n      <ion-label [color]=\\\"selectedSegment == 'upcoming' ? 'secondary' : 'primary'\\\">Upcoming</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"past\\\">\\r\\n      <ion-label [color]=\\\"selectedSegment == 'past' ? 'secondary' : 'primary'\\\">Past</ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col size-xl=\\\"6\\\" offset-xl=\\\"3\\\">\\r\\n        <ion-list *ngIf=\\\"selectedSegment == 'upcoming'\\\">\\r\\n          <ion-card *ngFor=\\\"let i of [1,2,3,4]\\\">\\r\\n            <ion-card-header color=\\\"primary\\\">\\r\\n              <ion-card-subtitle>\\r\\n                Cleaning Service <span class=\\\"ion-float-right\\\">{{'04-12-2022' | date}}</span>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <div style=\\\"display: flex; flex-direction: row;\\\">\\r\\n                <img src=\\\"/assets/images/stock-image.svg\\\" style=\\\"padding: 2%;\\\" />\\r\\n                <div style=\\\"width: 100%;\\\">\\r\\n                  <ion-list>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{today | date: 'shortTime'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"person\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{'Rahul Raj'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-list>\\r\\n                </div>\\r\\n              </div>\\r\\n              <ion-row>\\r\\n                <ion-col>\\r\\n                  <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"secondary-primary\\\" shape=\\\"round\\\" size=\\\"small\\\">\\r\\n                    Update\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col>\\r\\n                  <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\" shape=\\\"round\\\" size=\\\"small\\\">\\r\\n                    Cancel\\r\\n                  </ion-button>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-list>\\r\\n        \\r\\n        <ion-list *ngIf=\\\"selectedSegment == 'past'\\\">\\r\\n          <ion-card *ngFor=\\\"let i of [1,2,3,4]\\\">\\r\\n            <ion-card-header color=\\\"primary\\\">\\r\\n              <ion-card-subtitle>\\r\\n                Cleaning Service <span class=\\\"ion-float-right\\\">{{'03-12-2022' | date}}</span>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n              <div style=\\\"display: flex; flex-direction: row;\\\">\\r\\n                <img src=\\\"/assets/images/stock-image.svg\\\" style=\\\"padding: 2%;\\\" />\\r\\n                <div style=\\\"width: 100%;\\\">\\r\\n                  <ion-list>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{today | date: 'shortTime'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item lines=\\\"full\\\">\\r\\n                      <ion-icon name=\\\"person\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                      <ion-label>{{'Rahul Raj'}}</ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-list>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}